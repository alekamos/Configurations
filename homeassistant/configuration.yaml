homeassistant:
  name: Home
  unit_system: metric
  # etc

  customize: !include customize.yaml

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

discovery:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
   base_url: <dominio>
   ssl_certificate: /config/ssl/fullchain.pem
   ssl_key: /config/ssl/privkey.pem



group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml



# Example configuration.yaml entry
media_player:
  - platform: webostv
    host: 192.168.1.54
    name: TV
    filename: webostv.conf
    timeout: 5

      

        
mqtt:
  discovery: true
  broker: 192.168.1.53  # Remove if you want to use builtin-in MQTT broker
  birth_message:
    topic: 'hass/status'
    payload: 'online'
  will_message:
    topic: 'hass/status'
    payload: 'offline'
    

sensor:
  - platform: rest
    name: meteo_esterno_fisica
    resource: https://www.torinometeo.org/api/v1/realtime/data/torino-pietro-giuria/?format=json
    method: GET
    json_attributes:
      - temperature
      - relative_humidity
      - rain_rate
      - pressure
      - wind_strength
    value_template: '{{ value_json.datetime }}'
  - platform: template
    sensors:
      temperaturemeteofisica:
        value_template: '{{ states.sensor.meteo_esterno_fisica.attributes["temperature"] }}'
        device_class: temperature
        unit_of_measurement: 'C'
        friendly_name: "t. Ext"
      humiditymeteofisica:
        value_template: '{{ states.sensor.meteo_esterno_fisica.attributes["relative_humidity"] }}'
        friendly_name: "rh. ext"
        device_class: humidity
        unit_of_measurement: '%'
      rainratemeteofisica:
        value_template: '{{ states.sensor.meteo_esterno_fisica.attributes["rain_rate"] }}'
        unit_of_measurement: 'mm/h'
        friendly_name: "rain rate"
      pressuremeteofisica:
        value_template: '{{ states.sensor.meteo_esterno_fisica.attributes["pressure"] }}'
        device_class: pressure
        friendly_name: "pressure"
        unit_of_measurement: 'hPa'
      windmeteofisica:
        friendly_name: "windspeed"
        value_template: '{{ states.sensor.meteo_esterno_fisica.attributes["wind_strength"] }}'
        unit_of_measurement: 'km/h'
  
sensor 2:
  - platform: mqtt
    name: "temp int"
    state_topic: "rpi2/dht22"
    unit_of_measurement: 'C'
    device_class: temperature
    value_template: "{{ value_json.temperature }}"
    unique_id: tempInt
sensor 3:
  - platform: mqtt
    name: "hum int"
    state_topic: "rpi2/dht22"
    unit_of_measurement: '%'
    device_class: humidity
    value_template: "{{ value_json.humidity }}"
    unique_id: tempHum
sensor 4:
  - platform: mqtt
    name: "hum nodemcu"
    state_topic: "nodemcu1/humidity"
    unit_of_measurement: '%'
    device_class: humidity
    unique_id: tempHum2
sensor 5:
  - platform: mqtt
    name: "temp nodemcu"
    state_topic: "nodemcu1/temperature"
    unit_of_measurement: 'C'
    device_class: temperature
    unique_id: tempInt2
sensor 6:
    - platform: min_max
      name: "MediaCasa"
      type: "mean"
      round_digits: 2
      entity_ids:
        - sensor.temp_int
        - sensor.temp_nodemcu
    
device_tracker:
  - platform: nmap_tracker
    hosts: 
      - 192.168.1.0/24
      
influxdb:

      
telegram_bot:
  - platform: polling
    api_key: <key>
    allowed_chat_ids:
      - -<chatid>


# Example configuration.yaml entry for the notifier
notify:
  - name: telegram_msg
    platform: telegram
    chat_id: -<chatid>
    
    
switch:  
  - platform: mqtt
    name: "Esp8266ThermostatSwitch"
    command_topic: "nodemcu1/caldaia/command"
    state_topic: "nodemcu1/caldaia/status"
    qos: 0
    payload_on: "ON"
    payload_off: "OFF"
    retain: false
    
    
climate:
  - platform: generic_thermostat
    name: ESP8266Themostat
    heater: switch.Esp8266ThermostatSwitch
    target_sensor: sensor.MediaCasa
    min_temp: 10
    max_temp: 30
    min_cycle_duration:
      seconds: 5
    target_temp: 20
    away_temp: 17
    cold_tolerance: 0.5
    hot_tolerance: 0.5
    precision: 0.1
